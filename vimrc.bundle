" A bundle of vim plugins friendly classified.
"
" The configuration is made just after each plugin.
" Use :Bundle to include a plugin, :Dundle to disable a plugin.

" Plugin management {{{
" A map for copying a bundle's URL
noremap <buffer> <leader>c :call setreg('+', substitute(getline('.'), '\v.*\s.(.*).$', 'github.com/\1', 'g'))<cr>

" Slogan: manage your runtimepath.
Bundle 'tpope/vim-pathogen'

" Slogan: A Vim plugin for Vim plugins.
Bundle 'tpope/vim-scriptease'
" }}}

" Session, file, buffer, pane, window, tab {{{
" Slogan: obsession.vim: continuously updated session files.
Bundle 'tpope/vim-obsession'

" Slogan: a tree explorer plugin for vim.
Bundle 'scrooloose/nerdtree'
noremap <leader>tt :NERDTreeToggle<CR>
" Goto the current working directory
noremap <leader>td :NERDTree<CR>
" Goto the current editing file
noremap <leader>tf :NERDTreeFind<CR>
let NERDTreeBookmarksFile=expand('$HOME') . '/.vim/tmp/NERDTreeBookmarks'
let NERDTreeIgnore=['^\.$', '^\.\.$', '\~$', '\.pyc$', '\.swp$']
let NERDTreeShowHidden=1
let NERDTreeShowBookmarks=1
let NERDTreeQuitOnOpen=1
let NERDTreeMouseMode=2
" Disable these mappings <c-j> and <c-k>
let g:NERDTreeMapJumpNextSibling=''
let g:NERDTreeMapJumpPrevSibling=''

" Slogan: Fuzzy file, buffer, mru, tag, etc finder.
Bundle 'kien/ctrlp.vim'
" let g:loaded_ctrlp = 1 " disable it completely
let g:ctrlp_cache_dir = $HOME.'/.vim/tmp/ctrlp'
" let g:ctrlp_show_hidden = 1
let g:ctrlp_custom_ignore = {
  \ 'dir':  '\v[\/]\.(git|hg|svn)$',
  \ 'file': '\v\.(exe|so|dll)$' }

" Slogan: Buffer Explorer/Browser.
Bundle 'vim-scripts/bufexplorer.zip'
" nmap <leader>b :BufExplorer<CR>
" }}}

" Editing {{{
" Undo {{{
" Slogan: Display your undo history in a graph.
Bundle 'mbbill/undotree'
nnoremap <c-h> :UndotreeToggle<CR>
let g:undotree_SetFocusWhenToggle=1 " put cursor to undotree when togglling

" Slogan: Vim plugin to visualize your Vim undo tree.
Bundle 'sjl/gundo.vim'
" }}}

" Comment {{{
" Slogan: commentary.vim: comment stuff out.
Bundle 'tpope/vim-commentary'

" Slogan: Vim plugin for intensely orgasmic commenting.
Dundle 'scrooloose/nerdcommenter'
" }}}

" Insert mode {{{
" Slogan: Software caps lock
Bundle 'tpope/vim-capslock'
imap <C-L> <Plug>CapsLockToggle

" Slogan: Vim plugin, provides insert mode auto-completion for quotes, parens, brackets, etc.
Bundle 'Raimondi/delimitMate'

" Slogan: wisely add "end" in ruby, endfunction/endif/more in vim script, etc.
Bundle 'tpope/vim-endwise'
" }}}

" Completion and snippets {{{
" Slogan: A code-completion engine for Vim.
if has('unix')
  Bundle 'Valloric/YouCompleteMe'
else
  Dundle 'Valloric/YouCompleteMe'
endif

" Slogan: Perform all your vim insert mode completions with Tab.
if ! has('unix')
  Bundle 'ervandew/supertab'
else
  Dundle 'ervandew/supertab'
endif

" Slogan: This is an implementation of TextMates Snippets for the Vim Text Editor. It has all features of TextMates Snippets and then some.
Bundle 'SirVer/ultisnips'
" Resolve the conflict with YouCompleteMe
let g:UltiSnipsExpandTrigger='<C-E>'
" The default <C-Tab> don't work in terminal
let g:UltiSnipsListSnippets='<C-A>'
" Snippets search path(must be under vim's runtime path)
let g:UltiSnipsSnippetDirectories=["UltiSnips", "snippet"]
" Personal snippets path
let g:UltiSnipsSnippetsDir = "~/.vim/snippet"
" Don't check and reload snippets when a snippet expand is triggered
" let g:UltiSnipsDoHash=0

" Slogan: Ultimate auto-completion system for Vim.
Dundle 'Shougo/neocomplcache'

" Slogan: neo-snippet plugin contains neocomplcache snippets source.
Dundle 'Shougo/neosnippet'

" Slogan: snipMate.vim aims to be a concise vim script that implements some of TextMate's snippets features in Vim.
Dundle 'garbas/vim-snipmate'
  " Dependence: Slogan: vim: interpret a file by function and cache file automatically.
Dundle 'MarcWeber/vim-addon-mw-utils'
  " Dependence: Slogan: Some utility functions for VIM.
Dundle 'tomtom/tlib_vim'

" Slogan: vim-snipmate default snippets.
Dundle 'honza/vim-snippets'
" }}}

" Slogan: quoting/parenthesizing made simple.
Bundle 'tpope/vim-surround'

" Slogan: Vim script for text filtering and alignment.
Bundle 'godlygeek/tabular'

" Slogan: vim motions on speed.
Bundle 'Lokaltog/vim-easymotion'

" Slogan: True Sublime Text style multiple selections for Vim.
Bundle 'terryma/vim-multiple-cursors'

" Slogan: use CTRL-A/CTRL-X to increment dates, times, and more.
Bundle 'tpope/vim-speeddating'

" Slogan: easily search for, substitute, and abbreviate multiple variants of a word.
Bundle 'tpope/vim-abolish'
" More convenient to type than 'cr'
nmap cx <Plug>Coerce

" Slogan: Heuristically set buffer options.
Bundle 'tpope/vim-sleuth'

" Slogan: enable repeating supported plugin maps with ".".
Bundle 'tpope/vim-repeat'

" Slogan: characterize.vim: Unicode character metadata.
Bundle 'tpope/vim-characterize'

" Slogan: Maintains a history of previous yanks, changes and deletes.
Dundle 'vim-scripts/yankring.vim'
" }}}

" Visual {{{
" Color Schemes {{{
" Slogan: one colorscheme pack to rule them all.
Bundle 'flazz/vim-colorschemes'

" Slogan: Make gvim-only colorschemes work transparently in terminal vim.
Dundle 'godlygeek/csapprox'

" Slogan: precision colorscheme for the vim text editor.
Dundle 'altercation/vim-colors-solarized'

" Slogan: Molokai color scheme for Vim.
Dundle 'tomasr/molokai'

" Slogan: a colorscheme strangely reminiscent of Vibrant Ink for a certain OS X editor.
Dundle 'tpope/vim-vividchalk'
" }}}

" Slogan: A Vim plugin for visually displaying indent levels in code.
Bundle 'nathanaelkane/vim-indent-guides'
" }}}

" File types {{{
" Slogan: Syntax checking hacks for vim.
Bundle 'scrooloose/syntastic'

" Slogan: zen-coding for vim: http://code.google.com/p/zen-coding
Bundle 'mattn/zencoding-vim'
" Only enable insert mode functions
let g:user_zen_mode='i'
" let g:user_zen_leader_key = '<c-a>'

" Slogan: runtime files for Haml, Sass, and SCSS .
Bundle 'tpope/vim-haml'

" Slogan: A Vim plugin for Windows PowerShell support.
Bundle 'PProvost/vim-ps1'

" Slogan: Markdown runtime files.
Bundle 'tpope/vim-markdown'

" Slogan: Vim Git runtime files.
Bundle 'tpope/vim-git'

" Slogan: it's like rails.vim without the rails.
Bundle 'tpope/vim-rake'

" Slogan: Syntax file for nginx.
Bundle 'vim-scripts/nginx.vim'

" Slogan: A mirror to the official vimperator's syntax file.
Bundle 'bohrshaw/vim-vimperator-syntax'

" Slogan: Vim plugin for debugging Ruby applications (using ruby-debug-ide gem).
Dundle 'astashov/vim-ruby-debugger'

" Slogan: Vim/Ruby Configuration Files.
Dundle 'vim-ruby/vim-ruby'
  " Reason: This plugin is now shipped by vim and fairly updated.
" }}}

" External interaction {{{
" Slogan: a Git wrapper so awesome, it should be illegal.
Bundle 'tpope/vim-fugitive'
nnoremap <silent> <leader>gs :Gstatus<CR>
nnoremap <silent> <leader>gd :Gdiff<CR>
nnoremap <silent> <leader>gc :Gcommit<CR>
nnoremap <silent> <leader>gb :Gblame<CR>
nnoremap <silent> <leader>gl :Glog<CR>
nnoremap <silent> <leader>gp :Git push<CR>

" Slogan: helpers for UNIX(Windows).
Bundle 'tpope/vim-eunuch'

" Slogan: tmux basics.
if has('unix') && has("signs") && has("clientserver")
  Bundle 'tpope/vim-tbone'
else
  Dundle 'tpope/vim-tbone'
endif

" Slogan: Vim plugin for the Perl module / CLI script 'ack'.
if executable('ack-grep') || executable('ack')
  Bundle 'mileszs/ack.vim'
  if executable('ack-grep')
    let g:ackprg="ack-grep -H --nocolor --nogroup --column"
  endif
else
  Dundle 'mileszs/ack.vim'
endif

" Slogan: dispatch.vim: asynchronous build and test dispatcher.
Bundle 'tpope/vim-dispatch'

" Slogan: This script implements transparent editing of gpg encrypted files. The filename must have a ".gpg", ".pgp" or ".asc" suffix. When opening such a file the content is decrypted, when opening a new file the script will ask for the recipients of the encrypted file. The file content will be encrypted to all recipients before it is written. The script turns off viminfo, swapfile, and undofile to increase security.
Bundle 'jamessan/vim-gnupg'

" Slogan: Vim plugin that displays tags in a window, ordered by class etc.
Bundle 'majutsushi/tagbar'
" set tags=./tags;/,~/.vimtags
" nnoremap <silent> <leader>tt :TagbarToggle<CR>

" Slogan: A two-way integration between Vim and IPython 0.11+.
Bundle 'ivanov/vim-ipython'

" Slogan: vim plugin to interact with the simplenote service.
Dundle 'mrtazz/simplenote.vim'

" Slogan: vimscript for gist.
Dundle 'mattn/gist-vim'
" }}}

" Alternative usages {{{
" Slogan: Personal Wiki for Vim.
Bundle 'vim-scripts/vimwiki'
" Restrict vimwiki's operation to only those paths listed in g:vimwiki_list.
let g:vimwiki_global_ext = 0
" Don't conceal characters
let g:vimwiki_conceallevel = 0
" Register one or more wikis
let g:vimwiki_list = [{'path': '~/vimwiki/',
  \ 'syntax': 'markdown',
  \ 'ext': '.md'}]

" Task managers {{{
" Slogan: Quicktask is a lightweight Vim task management plugin.
Dundle 'aaronbieber/quicktask'

" Slogan: Vim plugin for the TaskPaper application.
Dundle 'davidoc/taskpaper.vim'

" Slogan: Vim Syntax for todo.txt (todotxt.com).
Dundle 'davidoc/todo.txt-vim'
" }}}
" }}}

" Miscellaneous and mixed {{{
" Slogan: pairs of handy bracket mappings.
Bundle 'tpope/vim-unimpaired'
" }}}

" vim:ft=vim tw=80 et sw=2 fdm=marker cms="\ %s nowrap:
